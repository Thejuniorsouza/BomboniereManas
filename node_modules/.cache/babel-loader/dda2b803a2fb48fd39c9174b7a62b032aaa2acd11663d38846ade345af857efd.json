{"ast":null,"code":"var _jsxFileName = \"/Users/juniorsouza/Documents/Projetos/Bomboniere manas/bomboniere-manas/src/components/CardPersonalizado/CardPersonalizado.jsx\";\nimport React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardPersonalizado = ({\n  imagem,\n  titulo,\n  descricao,\n  formatoImagem\n}) => {\n  // Define o estilo do clipe de caminho (path clip) com base no formatoImagem\n  let clipPathStyle = {};\n  let borderRadiusStyle = {};\n  switch (formatoImagem) {\n    case \"quadrado\":\n      // Imagem quadrada padrão\n      borderRadiusStyle = {\n        borderRadius: \"0\"\n      };\n      break;\n    case \"portal\":\n      // Quadrado com as pontas de cima arqueadas (formato de portal)\n      // Usaremos border-radius para as bordas superiores e um clip-path para a base\n      // Para um efeito mais complexo de portal, pode ser necessário um SVG ou um clip-path mais detalhado.\n      // Aqui, faremos um arqueado suave nas bordas superiores e manteremos a base reta.\n      borderRadiusStyle = {\n        borderTopLeftRadius: \"50% 20%\",\n        // Raio horizontal e vertical\n        borderTopRightRadius: \"50% 20%\",\n        borderBottomLeftRadius: \"0\",\n        borderBottomRightRadius: \"0\"\n      };\n      // Podemos usar um clip-path para \"cortar\" um pouco a base se for necessário um efeito mais acentuado de portal.\n      // Mas para \"quadrado com as pontas de cima arqueadas\", border-radius já faz boa parte do trabalho visual.\n      // clipPathStyle = { clipPath: 'polygon(0 0, 100% 0, 100% 100%, 0% 100%)' }; // Exemplo, pode ser ajustado\n      break;\n    case \"redondo\":\n      // Imagem redonda\n      borderRadiusStyle = {\n        borderRadius: \"50%\"\n      };\n      break;\n    default:\n      // Padrão para quadrado se nenhum formato for especificado\n      borderRadiusStyle = {\n        borderRadius: \"0\"\n      };\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: {\n        xs: \"90%\",\n        sm: \"80%\",\n        md: \"300px\"\n      },\n      // Largura responsiva para os cards\n      maxWidth: \"350px\",\n      margin: \"20px\",\n      padding: \"20px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      backgroundColor: \"#fff\",\n      borderRadius: \"8px\",\n      boxShadow: \"0px 4px 15px rgba(0, 0, 0, 0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: {\n          xs: \"150px\",\n          md: \"180px\"\n        },\n        // Tamanho do container da imagem\n        height: {\n          xs: \"150px\",\n          md: \"180px\"\n        },\n        overflow: \"hidden\",\n        // Importante para cortar a imagem se o formato não for quadrado\n        marginBottom: \"15px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        ...clipPathStyle,\n        // Aplica o clip-path se houver\n        ...borderRadiusStyle // Aplica o border-radius\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagem,\n        alt: titulo,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\" // Garante que a imagem cubra o espaço sem distorcer\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      gutterBottom: true,\n      sx: {\n        fontFamily: \"Roboto, sans-serif\",\n        color: \"#402620\",\n        mt: 1\n      },\n      children: titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        fontFamily: \"Roboto, sans-serif\",\n        color: \"#666\"\n      },\n      children: descricao\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = CardPersonalizado;\nexport default CardPersonalizado;\nvar _c;\n$RefreshReg$(_c, \"CardPersonalizado\");","map":{"version":3,"names":["React","Box","Typography","jsxDEV","_jsxDEV","CardPersonalizado","imagem","titulo","descricao","formatoImagem","clipPathStyle","borderRadiusStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","sx","width","xs","sm","md","maxWidth","margin","padding","display","flexDirection","alignItems","textAlign","backgroundColor","boxShadow","children","height","overflow","marginBottom","justifyContent","src","alt","style","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","fontFamily","color","mt","_c","$RefreshReg$"],"sources":["/Users/juniorsouza/Documents/Projetos/Bomboniere manas/bomboniere-manas/src/components/CardPersonalizado/CardPersonalizado.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Box, Typography } from \"@mui/material\";\n\nconst CardPersonalizado = ({ imagem, titulo, descricao, formatoImagem }) => {\n    // Define o estilo do clipe de caminho (path clip) com base no formatoImagem\n    let clipPathStyle = {};\n    let borderRadiusStyle = {};\n\n    switch (formatoImagem) {\n        case \"quadrado\":\n            // Imagem quadrada padrão\n            borderRadiusStyle = { borderRadius: \"0\" };\n            break;\n        case \"portal\":\n            // Quadrado com as pontas de cima arqueadas (formato de portal)\n            // Usaremos border-radius para as bordas superiores e um clip-path para a base\n            // Para um efeito mais complexo de portal, pode ser necessário um SVG ou um clip-path mais detalhado.\n            // Aqui, faremos um arqueado suave nas bordas superiores e manteremos a base reta.\n            borderRadiusStyle = {\n                borderTopLeftRadius: \"50% 20%\", // Raio horizontal e vertical\n                borderTopRightRadius: \"50% 20%\",\n                borderBottomLeftRadius: \"0\",\n                borderBottomRightRadius: \"0\",\n            };\n            // Podemos usar um clip-path para \"cortar\" um pouco a base se for necessário um efeito mais acentuado de portal.\n            // Mas para \"quadrado com as pontas de cima arqueadas\", border-radius já faz boa parte do trabalho visual.\n            // clipPathStyle = { clipPath: 'polygon(0 0, 100% 0, 100% 100%, 0% 100%)' }; // Exemplo, pode ser ajustado\n            break;\n        case \"redondo\":\n            // Imagem redonda\n            borderRadiusStyle = { borderRadius: \"50%\" };\n            break;\n        default:\n            // Padrão para quadrado se nenhum formato for especificado\n            borderRadiusStyle = { borderRadius: \"0\" };\n    }\n\n    return (\n        <Box\n            sx={{\n                width: { xs: \"90%\", sm: \"80%\", md: \"300px\" }, // Largura responsiva para os cards\n                maxWidth: \"350px\",\n                margin: \"20px\",\n                padding: \"20px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                textAlign: \"center\",\n                backgroundColor: \"#fff\",\n                borderRadius: \"8px\",\n                boxShadow: \"0px 4px 15px rgba(0, 0, 0, 0.1)\",\n            }}\n        >\n            <Box\n                sx={{\n                    width: { xs: \"150px\", md: \"180px\" }, // Tamanho do container da imagem\n                    height: { xs: \"150px\", md: \"180px\" },\n                    overflow: \"hidden\", // Importante para cortar a imagem se o formato não for quadrado\n                    marginBottom: \"15px\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    ...clipPathStyle, // Aplica o clip-path se houver\n                    ...borderRadiusStyle, // Aplica o border-radius\n                }}\n            >\n                <img\n                    src={imagem}\n                    alt={titulo}\n                    style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\", // Garante que a imagem cubra o espaço sem distorcer\n                    }}\n                />\n            </Box>\n            <Typography\n                variant=\"h5\"\n                component=\"h3\"\n                gutterBottom\n                sx={{\n                    fontFamily: \"Roboto, sans-serif\",\n                    color: \"#402620\",\n                    mt: 1,\n                }}\n            >\n                {titulo}\n            </Typography>\n            <Typography\n                variant=\"body1\"\n                sx={{ fontFamily: \"Roboto, sans-serif\", color: \"#666\" }}\n            >\n                {descricao}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CardPersonalizado;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}